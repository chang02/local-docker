version: '3.8'

services:
  mysql:
    container_name: mysql
    image: arm64v8/mysql:8.0.33
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/custom.cnf
      - ./mysql/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 2s
      timeout: 20s
      retries: 3
    networks:
      - pang_local_network
  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 3
    networks:
      - pang_local_network
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "nc", "-z", "127.0.0.1", "2181" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - pang_local_network
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: [ "CMD", "nc", "-z", "127.0.0.1", "9092" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      - zookeeper
    networks:
      - pang_local_network
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "18080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://broker:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - zookeeper
      - kafka
    networks:
      - pang_local_network
  mongodb:
    image: davybello/mongo-replica-set:4.4.8
    container_name: mongodb
    volumes:
      - ./.data/mongo1:/var/lib/mongo1
      - ./.data/mongo2:/var/lib/mongo2
      - ./.data/mongo3:/var/lib/mongo3
    ports:
      - "27017:27017"
      - "27018:27018"
      - "27019:27019"
    networks:
      - pang_local_network
networks:
  pang_local_network:
    driver: bridge